---
layout: project
tab: docs
---
- page.title = "What's New in #{page.product_name} #{page.product_version}"
- component_ids = page.component_pages.keys.sort{|x,y| site.components[x].name <=> site.components[y].name}

.row-fluid.affixedContent
  .span3.bs-docs-sidebar
    %ul.nav.nav-list.bs-docs-sidenav
      -# sorting versions in reverse order
      - site.whatsnew_pages[page.product_id].keys.sort{|x,y| y <=> x}.each do |product_major_version|
        -# major version content, including node expansion for the current page 
        - if product_major_version.end_with?(".Final")
          %li{:class=>("selected expanded" if product_major_version == page.product_major_version)}
            - latest_minor_version = site.whatsnew_pages[page.product_id][product_major_version].keys.sort{|x,y| y <=> x}.first
            - latest_minor_version_whatsnew_page = site.whatsnew_pages[page.product_id][product_major_version][latest_minor_version]
            %a{:href=>relative(latest_minor_version_whatsnew_page.output_path)} 
              #{product_major_version}
              %span{:class=>"label label_#{page.build_type}"}
                #{site.labels[page.build_type]} 
            - if product_major_version == page.product_major_version
              - site.whatsnew_pages[page.product_id][product_major_version].keys.sort{|x,y| y <=> x}.each do |product_minor_version|
                %ul.nav.nav-nested
                  %li{:class=>("selected expanded level2" if product_minor_version == page.product_version)}
                    - minor_version_whatsnew_page = site.whatsnew_pages[page.product_id][product_major_version][product_minor_version]
                    - unless product_minor_version.end_with?(".Final")
                      %a{:href=>relative(minor_version_whatsnew_page.output_path)} #{product_minor_version}
                    - if product_minor_version == page.product_version
                      %ul.nav.nav-nested
                        - component_ids.each_with_index do |component_id, index|
                          %li.component{:class=>(index == 0 ? "active" : "")}
                            %a{:href=>"##{component_id}"} #{site.components[component_id].name}
        - else
          -# other pages (minor versions alone)
          %li
            - development_version_whatsnew_page = site.whatsnew_pages[page.product_id][product_major_version]
            %a{:href=>relative(development_version_whatsnew_page.output_path)} 
              #{product_major_version}
              %span{:class=>"label label_#{development_version_whatsnew_page.build_type}"}
                #{site.labels[development_version_whatsnew_page.build_type]} 
              
            
  .span9.scrolledContent
    - download_page = site.download_pages[page.product_id][page.product_version]
    - unless download_page.nil?
      %p.direct-download
        %a.btn.btn-primary{:href => relative(download_page.output_path)} 
          %i.icon-download
          Download
      
    - default_imagesdir = site.asciidoctor.attributes['imagesdir']
    - component_ids.each do |component_id|
      - component_pages = page.component_pages[component_id]
      %div.component-wrapper{:id=>component_id}
        %h1.component-header #{site.components[component_id].name}
        - component_pages.each do |component_page|
          - site.asciidoctor.attributes['imagesdir'] = relative(Pathname.new(component_page.output_path).parent.to_s)
          #{component_page.content}
      %hr
    - site.asciidoctor.attributes['imagesdir'] = default_imagesdir
