---
layout: project
tab: downloads
---
.row-fluid
  .span3.bs-docs-sidebar
    %ul.nav.nav-list.bs-docs-sidenav
      - active_page_found = false
      -# show active versions
      - site.download_pages[page.product_id].each do |download_page| 
        - if download_page.build_info.active == true
          - active_page_found = active_page_found || download_page.build_info.version == page.build_info.version
          %li{:class=>("active" if download_page.build_info.version == page.build_info.version)}
            %a{:href=>relative(download_page.output_path)}
              %span
                #{download_page.build_info.version}
              %span{:class=>"label label_#{download_page.build_info.build_type}"}
                #{site.labels[download_page.build_info.build_type]}
      -# show inactive/older versions
      %li#allversions{:class=>("expanded selected" unless active_page_found)}
        %a{:href=>"#"}
          %span
            Previous Versions
        %ul.nav.nav-nested{:class=>("hidden" if active_page_found)}
          - site.download_pages[page.product_id].each do |download_page| 
            - if download_page.build_info.active == false
              %li{:class=>("active" if download_page.build_info.version == page.build_info.version)}
                %a{:href=>relative(download_page.output_path)}
                  %span
                    #{download_page.build_info.version}
                  %span{:class=>"label label_#{download_page.build_info.build_type}"}
                    #{site.labels[download_page.build_info.build_type]}
    :javascript
      $(document).ready(function() {
        $('#allversions').click(function() {
          $allversions = $('#allversions')
          console.log("Expanded: " + $allversions.hasClass('expanded'))
          if($allversions.hasClass('expanded')) {
            $allversions.removeClass('expanded')
            $allversions.find('ul').addClass('hidden')
          } else {
            $allversions.addClass('expanded')
            $allversions.find('ul').removeClass('hidden')
          }
        });
      });
        
  .span9#download
    %h2.center
      #{page.build_info.name} #{page.build_info.version}
      %span#displayed-version{:class=>"label label_#{page.build_info.build_type}"}
        #{site.labels[page.build_info.build_type]}
    .center
      - unless page.build_info.documentation_url.nil?
        %a{:href=>relative(page.build_info.documentation_url)} Documentation
      -# JBoss Tools has a What's New
      - unless page.build_info.whatsnew_url.nil?
        %a{:href=>relative(page.build_info.whatsnew_url)} What's New
      -# JBDS has Release Notes
      - unless page.build_info.release_notes_url.nil?
        %a{:href=>relative(page.build_info.release_notes_url)} Release Notes
    
    - if page.build_info.build_type == :stable
      .alert.alert-success
        #{page.build_info.name} #{page.build_info.version} was released on #{page.build_info.release_date}. 
        - if page.build_info.blog_announcement_url 
          %a{:href=>relative(page.build_info.blog_announcement_url)} Read the announcement.

    - elsif page.build_info.build_type == :development
      .alert.alert-info
        %strong Development builds
        have received basic testing, but are not considered fully stable yet.
    - elsif page.build_info.build_type == :nightly
      .alert.alert-warning
        %strong Warning! 
        The
        %strong nightly build
        contains the latest and greatest new features, but nothing is stable or guaranteed - yet.
    - unless page.build_info.eclipse_version.requirements.nil?
      .alert.alert-requirements
        - if ["jbt_core", "jbt_is"].include? page.build_info.product_id.to_s
          Requirements: #{page.build_info.eclipse_version.requirements} and #{page.build_info.eclipse_version.full_name}
        - if ["devstudio", "devstudio_is"].include? page.build_info.product_id.to_s
          Requirements: #{page.build_info.eclipse_version.requirements} only.
          
        
    
    #installation_tabs.tabbable
      %ul.nav.nav-tabs
        - unless page.build_info.marketplace_install_url.nil? 
          %li{:id=>"marketplace_tab"}
            %a{:href=>"#marketplace", :"data-toggle"=>"tab"}
              Eclipse Marketplace
        - unless page.build_info.update_site_url.nil?
          %li{:id=>"update_site_tab"}
            %a{:href=>"#update_site", :"data-toggle"=>"tab"}
              Update Site
        - unless page.build_info.zips.nil?
          %li{:id=>"zips_tab"}
            %a{:href=>"#zips", :"data-toggle"=>"tab"}
              Update Site Zip
    #installation-tabs-content.tab-content     
      - unless page.build_info.marketplace_install_url.nil? 
        -# use markdown or asciidoc instead 
        .tab-pane{:id=>"marketplace"}
          %p
            Drag and drop the 
            %a{:href=>page.build_info.marketplace_install_url, :title=>"Install"}<
              %img{:src=>relative("/images/tools/installbutton.png"), :alt=>"Drag and drop this button into a running #{eclipse_name} workspace to install #{page.build_info.name}", :height=>"25", :width=>"63"}
            icon on your active
            %strong< #{page.build_info.eclipse_version.full_name} 
            workspace, or alternatively, search for &quot;
            %strong> #{page.build_info.name} (#{page.build_info.eclipse_version.short_name})
            &quot; in Eclipse via:
            %blockquote 
              Help > Eclipse Marketplace...
          %p
            You can also view the installation page on the&nbsp
            %a{:href=>page.build_info.marketplace_url, :title=>"Eclipse Marketplace"}> Eclipse Marketplace
            \.
    
      -# Update site
      - unless page.build_info.update_site_url.nil?
        .tab-pane{:id=>"update_site"}
          :markdown
            Add the following URL to your **#{page.build_info.eclipse_version.full_name}** installation, via:<br/> 

            > Help > Install New Software... > Work with:

            [ #{page.build_info.update_site_url.to_s} ]( #{page.build_info.update_site_url.to_s} )

            Then select the individual features that you want to install.
    
      -# Update Site Zips
      - unless page.build_info.zips.nil?
        .tab-pane{:id=>"zips"}
          :markdown
            Below, you can download Update Site Zips (Archived p2 Repos) for offline installation. You **do not need to unpack the zips** to use them. Install into Eclipse via:<br/>

            > Help > Install New Software... > Add... > Archive...

            Then select the downloaded zip, and the feature(s) you'd like to install.

          %table.center
            %tr
              %th<Name
              %th<Size
              %th<Links
            - page.build_info.zips.each do |zip|
              %tr
                %td #{zip.name}  
                %td.right #{zip.download_size}              
                %td 
                  - if zip.url.end_with? "zip"
                    %a{:href=>zip.url} zip
                  - if zip.url.end_with? "html"
                    %a{:href=>zip.url} html
                  - if zip.md5_url?
                    (
                    %a{:href=>zip.md5_url}> md5
                    )
            
-# Placed at the end of the document so the pages load faster
:javascript
  $(document).ready(function () {
    #{init_download_tab_states(page.build_info)}
    
  });  